# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do | config |
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
    # Disable automatic box update checking. If you disable this, then
    # boxes will only be checked for updates when the user runs
    # `vagrant box outdated`. This is not recommended.
    # config.vm.box_check_update = false
    config.vm.box = "ubuntu/xenial64"
    config.vm.boot_timeout = 3600
    config.vm.define "UX16.04-Boxer" do | defaults |
        # Create a forwarded port mapping which allows access to a specific port
        # within the machine from a port on the host machine. In the example below,
        # accessing "localhost:8080" will access port 80 on the guest machine.
        # NOTE: This will enable public access to the opened port
        # defaults.vm.network "forwarded_port", guest: 80, host: 1225

        # Create a private network, which allows host-only access to the machine
        # using a specific IP. If you would like to work with a VPN, use this:
        defaults.vm.network "private_network", type: "dhcp"

        # Share an additional folder to the guest VM. The first argument is
        # the path on the host to the actual folder. The second argument is
        # the path on the guest to mount the folder. And the optional third
        # argument is a set of non-required options.
        defaults.vm.synced_folder "../../../common/resources", "/mnt/resources",
            id: "resources",
            group: 'www-data',
            owner: 'www-data',
            mount_options: ["dmode=775,fmode=777"]

        # Provider-specific configuration so you can fine-tune various
        # backing providers for Vagrant. These expose provider-specific options.
        # Example for VirtualBox:
        #
        defaults.vm.provider "virtualbox" do |vb|
            # Display the VirtualBox GUI when booting the machine
            # vb.gui = true
            #
            # Customize the amount of memory on the VM:
            vb.memory = "4096"
        end
        #
        # View the documentation for the provider you are using for more
        # information on available options.

        # Enable provisioning with a shell script. Additional provisioners such as
        # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
        # documentation for more information about their specific syntax and use.
        # config.vm.provision "shell", inline: <<-SHELL
        #   apt-get update
        #   apt-get install -y apache2
        # SHELL
        defaults.vm.provision "shell", path: "../../../common/provisioners/00-utils.sh"
        defaults.vm.provision "shell", path: "provisioners/php74.sh"
        defaults.vm.provision "shell", path: "provisioners/mysql57.sh"
        defaults.vm.provision "shell", path: "provisioners/elasticsearch68.sh"
        defaults.vm.provision "shell", path: "../../../common/provisioners/01-misc.sh"
        defaults.vm.provision "shell", path: "../../../common/provisioners/02-vcs.sh"
        defaults.vm.provision "shell", path: "../../../common/provisioners/03-apache2.sh"
        defaults.vm.provision "shell", path: "../../../common/provisioners/04-node.sh"
        defaults.vm.provision "shell", path: "../../../common/provisioners/05-composer.sh"
        defaults.vm.provision "shell", path: "provisioners/06-copyfiles.sh"
        defaults.vm.provision "shell", path: "../../../common/provisioners/06-apachewildcards.sh"
    end
end

dev_vagrantfile = './Vagrantfile.dev'
load dev_vagrantfile if File.exists?(dev_vagrantfile)
